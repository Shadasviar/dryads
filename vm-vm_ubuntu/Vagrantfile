# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.provider "virtualbox" do |v|
      v.memory = 512
  end

  config.vm.define "supervisor" do |supervisor|
      supervisor.vm.box = "ubuntu/bionic64"

      supervisor.vm.provision :docker, type: :shell, preserve_order: true, inline: <<-SHELL
        export DEBIAN_FRONTEND=noninteractive
        apt update
        apt install --assume-yes apt-transport-https ca-certificates curl gnupg2 software-properties-common
        curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -
        add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
        apt update
        apt-get install --assume-yes --quiet git golang docker.io sshpass
        systemctl enable docker
        systemctl start docker
      SHELL

      supervisor.vm.provision :dryad, type: :shell, preserve_order: true, inline: <<-SHELL
        mkdir -p ~/go/src/github.com/SamsungSLAV
        mkdir -p ~/go/bin
        cd ~/go/src/github.com/SamsungSLAV
        git clone "https://review.gerrithub.io/SamsungSLAV/boruta"
        cd boruta
        git fetch "https://review.gerrithub.io/SamsungSLAV/boruta" refs/changes/70/445570/2 && git checkout FETCH_HEAD
        go get ./...
        go build -o dryad_amd64 cmd/dryad/dryad.go
        GOARCH=arm GOARM=7 GOOS=linux go build -o dryad_armv7 cmd/dryad/dryad.go
        mv dryad_amd64 /usr/bin/dryad

        mkdir -p /etc/boruta
        cat > /etc/boruta/dryad.conf <<EOL
        listen_port = ":7175"
        listen_address = "10.42.1.7:7175"
        boruta_address = "10.42.1.5:7175"
        ssh_address = "10.42.1.7:22"
        sdcard = "/dev/sdX"
        stm_path = "/run/stm.socket"

        [caps]
          UUID = "aebdb4bc-b6e8-4318-b461-64b938eb060f"
          device_type = "Ubuntu"

        [user]
          name = "boruta-user"
          groups = ["disk", "dialout", "stm", "uucp"]
EOL
      SHELL

      supervisor.vm.provision :dut_scripts, type: :shell, inline: <<-SHELL
        git clone https://github.com/Shadasviar/dryads
        cd dryads
        cp vm-vm_ubuntu/* /usr/local/bin/
      SHELL

      supervisor.vm.provision :muxpi, type: :shell, preserve_order: true, inline: <<-SHELL
        git clone https://github.com/SamsungSLAV/muxpi
        cd muxpi/sw/nanopi
        make
        mv bin/stm_amd64 /usr/bin/stm
      SHELL

      supervisor.vm.provision :stm_service, type: :shell, preserve_order: true, inline: <<-SHELL
        cat > /etc/systemd/system/stm.service <<EOL
        [Unit]
        Description=STM RPC
        Requires=stm-user.socket
        Requires=stm.socket

        [Service]
        ExecStart=/usr/bin/stm -serve -dummy
        KillSignal=SIGINT

        [Install]
        WantedBy=multi-user.target

EOL
      SHELL

      supervisor.vm.provision :stm_socket, type: :shell, preserve_order: true, inline: <<-SHELL
        cat > /etc/systemd/system/stm.socket <<EOL
        [Unit]
        Description=Admin socket activation for STM daemon

        [Socket]
        SocketMode=0660
        ListenStream=/run/stm.socket

        [Install]
        WantedBy=sockets.target

EOL
      SHELL

      supervisor.vm.provision :dryad_service, type: :shell, preserve_order: true, inline: <<-SHELL
        cat > /etc/systemd/system/dryad.service <<EOL
        [Unit]
        Description=Dryad service
        Requires=stm.socket
        
        [Service]
        Type=simple
        ExecStartPre=-/bin/mknod -m 0666 /dev/fuse c 10 229
        ExecStart=/usr/bin/dryad
        Restart=always
        
        [Install]
        WantedBy=default.target
EOL

        groupadd stm
        systemctl enable dryad
        systemctl start dryad
      SHELL

      supervisor.vm.network "private_network", ip: "10.42.1.7"
  end

  config.vm.define "dut" do |dut|
      dut.vm.box = "ubuntu/bionic64"
      dut.vm.network "private_network", ip: "10.42.1.8"
      dut.vm.provision :enable_ssh_password, type: :shell, inline: <<-SHELL
        sed -i 's/PasswordAuthentication.*/PasswordAuthentication yes/' /etc/ssh/sshd_config
      SHELL
  end

end
